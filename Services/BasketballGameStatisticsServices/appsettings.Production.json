{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },

  "Kestrel": {
    "Endpoints": {
      "Http": {
        "Url": "http://+:2001"
      }
      //"Https": {
      //  "Url": "https://+:7093",
      //  "Certificate": {
      //    // "Path": "/app/certs/AIFamilyEducationLocalHost.pfx",
      //    "Path": "certs/AIFamilyEducationLocalHost.pfx",
      //    "Password": "Nbq4dcz123"
      //  }
      //}
    }
  },

  "JwtToken": {
    "SecretKey": "nanbanqiu4dacaizi1234567890meiyouchuiziprod",
    "Issuer": "http://www.matrixthoughts.com",
    "Audience": "http://www.matrixthoughts.com"
  },

  "EngineConfig": {
    "EngineSystemPrompt": "输入的字符串通常包含三个信息它们有[颜色]，[号码]，[事件] 组成。颜色是球队颜色，号码是球员号码，\\\\n\\\\n颜色只有两种， \\\\\\\"白色\\\\\\\"英文是 \\\\\\\"Light\\\\\\\"和\\\\\\\"黑色\\\\\\\" 英文是 \\\\\\\"Dark\\\\\\\"\\\\n号码是0-99号\\\\n\\\\n事件包括很多种球场上的事件，事件只有以下几种\\\\n\\\\n\\\\\\\"3分\\\\\\\" 英文 3points\\\\n\\\\\\\"2分\\\\\\\" 英文 2points\\\\n\\\\\\\"1分\\\\\\\" 英文 1point\\\\n\\\\\\\"助攻\\\\\\\" 英文 assist\\\\n\\\\\\\"犯规\\\\\\\" 英文 foul\\\\n\\\\\\\"篮板\\\\\\\" 英文 rebound\\\\n\\\\\\\"投丢\\\\\\\" 或者 \\\\\\\"投篮\\\\\\\" 或者 \\\\\\\"投篮不进\\\\\\\" 英文 miss or missShoot\\\\n\\\\\\\"抢断\\\\\\\" 英文 steal\\\\n\\\\\\\"盖帽\\\\\\\" 英文 block\\\\n\\\\n第一步，当你接受字符串的时候，三个顺序不一定按照[颜色]，[号码]，[事件]来，可能是[号码]，[事件]，[颜色].如果是这样的话，请调整顺序，然后输出格式为[颜色]，[号码]，[事件]。\\\\n有时候文字不一定在上面描述的颜色，号码，时间范围内，请自动根据发音理解，调整成为正确的文字, 然后翻译成英文\\\\n\\\\n比如说 \\\\n\\\\n\\\\\\\"百对32号助攻 => white, 32, assist\\\\\\\"\\\\n\\\\\\\"黑队吴昊篮板 =>black, 5， rebound\\\\\\\"\\\\n\\\\\\\"6号三分白队 => white, 6, 3points\\\\\\\"\\\\n\\\\n最重要的一点，最后的输出只要一个string, 按照[颜色]，[号码]，[事件] 而且是英文的。其他什么分析，或者多余的都不要。\\\\n\\\\n第二步，当转换成string，请把它进一步转换成一个json string。结构请参考这个class \\\\n\\\\nnamespace BasketballGameStatistics.SqlServer.EFCore.Models\\\\n\\\\{\\\\n public class PlayerStatistic\\\\n \\\\{\\\\n public long Id \\\\{ get; set; \\\\}\\\\n public int GameId \\\\{ get; set; \\\\}\\\\n public int？ Team \\\\{ get; set; \\\\}\\\\n public int？ PlayerNumber \\\\{ get; set; \\\\}\\\\n public int? Point \\\\{ get; set; \\\\}\\\\n public int? Foul \\\\{ get; set; \\\\}\\\\n public int? Rebound \\\\{ get; set; \\\\}\\\\n public int? MissShoot \\\\{ get; set; \\\\}\\\\n public int? Steal \\\\{ get; set; \\\\}\\\\n public int? Block \\\\{ get; set; \\\\}\\\\n public int? Assist \\\\{ get; set; \\\\}\\\\n public string InputText \\\\{ get; set; \\\\} = string.Empty;\\\\n public DateTime CreateTime \\\\{ get; set; \\\\}\\\\n \\\\}\\\\n\\\\}\\\\n\\\\nId和gameId可以放0， Team就是[颜色], 如果是白色就放1，黑色请放2 PlayerNumber就是球员[号码]，请对应相应的事件到class property， 如果事件是3points，那相应的Point 就要 = 3， 如果[事件]里有rebound， 那Rebound = 1.\\\\n\\\\nInputText 就是user的input string。\\\\n比如说\\\\n\\\\\\\"white, 32, assist\\\\\\\"\\\\nTeam = 1,\\\\nPlayerNumber = 32,\\\\nAssist = 1\\\\n\\\\n\\\\\\\"black, 6, 3points\\\\\\\"\\\\nTeam = 2,\\\\nPlayerNumber = 6,\\\\nPoint = 3\\\\n\\\\n最重要的一点，最后的输出只要一个json string 以\\\\\\\"\\\\{\\\\\\\"开始，\\\\\\\"\\\\}\\\\\\\"结束 \\\\n\\\\n 如果[颜色] 或者 [号码]或者 [事件] 三个信息里面任何一个信息缺失，content里面请继续返回json string, 缺失的信息请留空",
    "Model": "ChatGpt"
  },


  "AzureVoiceService": {
    "SpeechKey": "6mkt1gEfmOELlsa9pLf+CD9aAfqOU4K0gkyTFhWTMLbgcQ0o/VpBBjXI55+lqLPY0yUOMOz+VkeUcZno+KHI6Q==",
    "ServiceRegion": "eastus"
  },


  "ConnectionStrings": {
    //NAS Local
    //"DefaultConnection": "HYQoQ0actcvq3wjLjVBmIPQjN4jfZn1oHbK3TIDf9UI2H7rNpkEgT+WPvsjPlSguv2PLiyJSTSRCZFNceTtE2JXSpmB7rcPTuz6VnMpJ0gKYgA9haxaLW7raWaebrhkDOLKRnccLV3wzPd4xgTbIAk+EiGbFLxFKmcg7SvZ2XIVFlgTSfDmMCHfvq1dmp5UikRSCNOJ3yp2XGVUV98u5PSyAMoDUMTSTEGIxDNEnZBPuSCBr/klqC5qVQ9bhHF1mPR/BDsSUh5nib51sb4LvKPCroB6ruawqLJS6ZryjKq/pj3JFJEdOxUpmXSkJXKbBqQQG2qmWus03TDV01YvEQQ==",
    // cloud Dev
    // "DefaultConnection": "Server=tcp:matrixthoughts.ddns.net,3111;Initial Catalog=AIFamilyEducation;Persist Security Info=False;User ID=sa;Password=returnNull1!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=True;Connection Timeout=30;",
    "DefaultConnection": "T1QlnNA3uKcHlJpQt/PM7dBqyHZmyYKmkxuFFc1+mC1MXZOI87cEuPP48/TqWTgxbhNlY1pzhYcMPXY12BlaWx4Jhf1PtlmXCIRNJBU6NHk2B/cUQjVE8oit3rL7v8MJhKepWR66y9StNZZkW+WfxwbK1hQ7+F4GVnqVNTpUjAVZpFJBLqkeE8r8IepcTQAIwKXD06C22ZuBXiJ0S6xWN33C8CT7TGe32yIvLzOaUId6Htngsyri+6bU8LM0kJPwdvTqT3vySFs2cLaB/rK1MCiVh635q3XUIPxrGqVT9n+nvDTRzkDDkvKbwhVXxdB8bC5tvQRs/dMOa4IExylJucNuELBUP26rH42p4MaloCA="

  }
}
